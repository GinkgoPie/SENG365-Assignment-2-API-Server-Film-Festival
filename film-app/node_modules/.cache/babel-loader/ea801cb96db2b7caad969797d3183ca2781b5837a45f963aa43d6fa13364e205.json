{"ast":null,"code":"var _jsxFileName = \"/Users/baojiahe/Desktop/SENG365/seng365-assignment2-2023/film-app/src/components/FilmListObject.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Delete, Edit } from \"@mui/icons-material\";\nimport { useFilmStore } from \"../store/film\";\nimport { useGenresStore } from \"../store/genre\";\nimport { Card, CardActions, CardContent, CardMedia, IconButton, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilmListObject = (filmProps, genreProps) => {\n  _s();\n  const [film] = React.useState(filmProps.film);\n  const genres = useGenresStore(state => state.genres);\n  const setGenres = useGenresStore(state => state.setGenres);\n  const [username, setUsername] = React.useState(\"\");\n  const [errorFlag, setErrorFlag] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n  const [openEditDialog, setOpenEditDialog] = React.useState(false);\n  const deleteUserFromStore = useFilmStore(state => state.removeFilm);\n  const handleDeleteDialogClose = () => {\n    setOpenDeleteDialog(false);\n  };\n  const handleEditDialogClose = () => {\n    setOpenEditDialog(false);\n  };\n  React.useEffect(() => {\n    const getGenres = () => {\n      axios.get(\"https://seng365.csse.canterbury.ac.nz/api/v1/films/genres\").then(response => {\n        setErrorFlag(false);\n        setErrorMessage(\"\");\n        setGenres(response.data);\n      }, error => {\n        setErrorFlag(true);\n        setErrorMessage(error.toString());\n      });\n    };\n    getGenres();\n  }, [setGenres]);\n  const userCardStyles = {\n    width: \"30%\",\n    // set the width of each card\n    margin: \"1%\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(30%, 1fr))\",\n    // specify the column width\n    gap: \"2%\"\n  };\n  const getFilmGenre = film => {\n    return genres.map(genre => {\n      if (genre.genreId === film.genreId) {\n        return genre.name;\n      }\n    });\n  };\n  const getImagePath = film => {\n    return \"https://seng365.csse.canterbury.ac.nz/api/v1/films/\" + film.filmId + \"/image\";\n  };\n  function handleImageLoad(event) {\n    const imageElement = event.target;\n    console.log(\"Image loaded:\", imageElement.src);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: userCardStyles,\n    children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      sx: {\n        objectFit: \"contain\"\n      },\n      image: getImagePath(film),\n      onError: e => {\n        e.currentTarget.src = \"../../storage/Film/defaultFilm.jpeg\";\n      },\n      alt: \"Movie poster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: [film.title, film.filmId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: film.ageRating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [film.releaseDate, getFilmGenre(film)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: getFilmGenre(film)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setOpenEditDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          setOpenDeleteDialog(true);\n        },\n        children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(FilmListObject, \"pj3zRWOEvbhNsMnZS/5i1j/0/8Y=\", false, function () {\n  return [useGenresStore, useGenresStore, useFilmStore];\n});\n_c = FilmListObject;\nexport default FilmListObject;\nvar _c;\n$RefreshReg$(_c, \"FilmListObject\");","map":{"version":3,"names":["React","axios","Delete","Edit","useFilmStore","useGenresStore","Card","CardActions","CardContent","CardMedia","IconButton","Typography","jsxDEV","_jsxDEV","FilmListObject","filmProps","genreProps","_s","film","useState","genres","state","setGenres","username","setUsername","errorFlag","setErrorFlag","errorMessage","setErrorMessage","openDeleteDialog","setOpenDeleteDialog","openEditDialog","setOpenEditDialog","deleteUserFromStore","removeFilm","handleDeleteDialogClose","handleEditDialogClose","useEffect","getGenres","get","then","response","data","error","toString","userCardStyles","width","margin","display","gridTemplateColumns","gap","getFilmGenre","map","genre","genreId","name","getImagePath","filmId","handleImageLoad","event","imageElement","target","console","log","src","sx","children","component","objectFit","image","onError","e","currentTarget","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","title","color","ageRating","releaseDate","onClick","_c","$RefreshReg$"],"sources":["/Users/baojiahe/Desktop/SENG365/seng365-assignment2-2023/film-app/src/components/FilmListObject.tsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Delete, Edit } from \"@mui/icons-material\";\nimport { useFilmStore } from \"../store/film\";\nimport { useGenresStore } from \"../store/genre\";\nimport {\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    IconButton,\n    TextField,\n    Typography,\n} from \"@mui/material\";\nimport CSS from \"csstype\";\n\ninterface IFilmProps {\n    film: Film;\n}\n\ninterface IGenreProps {\n    genre: Genre;\n}\n\nconst FilmListObject = (filmProps: IFilmProps, genreProps: IGenreProps) => {\n    const [film] = React.useState<Film>(filmProps.film);\n    const genres = useGenresStore((state) => state.genres);\n    const setGenres = useGenresStore((state) => state.setGenres);\n    const [username, setUsername] = React.useState(\"\");\n    const [errorFlag, setErrorFlag] = React.useState(false);\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\n    const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\n    const [openEditDialog, setOpenEditDialog] = React.useState(false);\n    const deleteUserFromStore = useFilmStore((state) => state.removeFilm);\n\n    const handleDeleteDialogClose = () => {\n        setOpenDeleteDialog(false);\n    };\n    const handleEditDialogClose = () => {\n        setOpenEditDialog(false);\n    };\n\n    React.useEffect(() => {\n        const getGenres = () => {\n            axios\n                .get(\n                    \"https://seng365.csse.canterbury.ac.nz/api/v1/films/genres\"\n                )\n                .then(\n                    (response) => {\n                        setErrorFlag(false);\n                        setErrorMessage(\"\");\n                        setGenres(response.data);\n                    },\n                    (error) => {\n                        setErrorFlag(true);\n                        setErrorMessage(error.toString());\n                    }\n                );\n        };\n        getGenres();\n    }, [setGenres]);\n\n    const userCardStyles: CSS.Properties = {\n        width: \"30%\", // set the width of each card\n        margin: \"1%\",\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(30%, 1fr))\", // specify the column width\n        gap: \"2%\",\n    };\n\n    const getFilmGenre = (film: Film) => {\n        return genres.map((genre: Genre) => {\n            if (genre.genreId === film.genreId) {\n                return genre.name;\n            }\n        });\n    };\n\n    const getImagePath = (film: Film) => {\n        return (\n            \"https://seng365.csse.canterbury.ac.nz/api/v1/films/\" +\n            film.filmId +\n            \"/image\"\n        );\n    };\n\n    function handleImageLoad(\n        event: React.SyntheticEvent<HTMLImageElement>\n    ) {\n        const imageElement = event.target as HTMLImageElement;\n        console.log(\"Image loaded:\", imageElement.src);\n    }\n\n    return (\n        <Card sx={userCardStyles}>\n            <CardMedia\n                component=\"img\"\n                sx={{ objectFit: \"contain\" }}\n                image={getImagePath(film)}\n                onError={(e) => {\n                    e.currentTarget.src = \"../../storage/Film/defaultFilm.jpeg\";\n                }}\n                alt=\"Movie poster\"\n            />\n            <CardContent>\n                <Typography variant=\"h4\">\n                    {film.title}\n                    {film.filmId}\n                </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n                {film.ageRating}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n                {film.releaseDate}\n                {getFilmGenre(film)}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n               {getFilmGenre(film)}\n            </Typography>\n            </CardContent>\n            <CardActions>\n                <IconButton onClick={() => {setOpenEditDialog(true)}}>\n                    <Edit/>\n                </IconButton>\n                <IconButton onClick={() => {setOpenDeleteDialog(true)}}>\n                    <Delete/>\n                </IconButton>\n            </CardActions>\n        </Card> )\n}\n\n    export default FilmListObject"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}